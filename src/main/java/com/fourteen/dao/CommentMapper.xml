<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fourteen.dao.CommentMapper">
    <select id="queryAll" resultType="comment">
        select *
        from comment;
    </select>

    <select id="queryByLimit" resultType="comment">
        select *
        from comment
        limit #{page},#{limit}
    </select>

    <select id="countComment" resultType="_int">
        select count(*)
        from comment
    </select>

    <select id="queryArticleCommentByArticleId" parameterType="string" resultType="string">
        select comment_id
        from article_comment
        where article_id = #{id}
    </select>

    <select id="queryCommentIdByUserId" parameterType="string" resultType="string">
        select id
        from comment
        where user_id = #{id}
    </select>

    <update id="updateComment" parameterType="map">
        UPDATE comment
        <set>
            <if test="content!=null">
                content = #{content},
            </if>
            <if test="userId!=null">
                user_id = #{userId},
            </if>
            <if test="time!=null">
                time = #{time},
            </if>
        </set>
        where id= #{id}
    </update>

    <delete id="deleteCommentById" parameterType="string">
        delete
        from comment
        where id = #{id}
    </delete>

    <delete id="deleteCommentByUserId" parameterType="string">
        delete
        from comment
        where user_id = #{id}
    </delete>

    <delete id="deleteArticleCommentByArticleId" parameterType="string">
        delete
        from article_comment
        where article_id = #{id}
    </delete>

    <delete id="deleteArticleCommentByCommentId" parameterType="string">
        delete
        from article_comment
        where comment_id = #{id}
    </delete>

    <insert id="addComment" parameterType="map">
        insert into comment(id, user_id, time, content) VALUE
            (#{id}, #{userId}, NOW(), #{content})
    </insert>

    <insert id="addArticleComment" parameterType="map">
        insert into article_comment(id, comment_id, article_id) VALUE
            (#{id}, #{commentId}, #{articleId})
    </insert>
</mapper>